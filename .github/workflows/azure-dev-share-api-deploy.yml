name: staging - backend api deployment 

on:
  pull_request:
    branches: ['main']
  push:
    branches: ['main']

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  # CI job - runs for PRs to main
  ci:
    runs-on: windows-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ./dev-share-api/dev-share-api.csproj

      - name: Build
        run: dotnet build ./dev-share-api/dev-share-api.csproj --configuration Release --no-restore

      - name: Run tests
        run: dotnet test ./dev-share-api/dev-share-api.csproj --configuration Release --no-build --verbosity normal

      - name: Build verification
        run: |
          echo "✅ CI checks completed successfully"

  # Build job - runs when PR is merged to main
  build:
    runs-on: windows-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Run CI checks before deployment
        run: |
          echo "Running pre-deployment CI checks..."
          dotnet restore ./dev-share-api/dev-share-api.csproj
          dotnet build ./dev-share-api/dev-share-api.csproj --configuration Release --no-restore
          dotnet test ./dev-share-api/dev-share-api.csproj --configuration Release --no-build --verbosity normal

      - name: Install EF Core tools
        run: dotnet tool install --global dotnet-ef

      - name: .NET Tool restore
        working-directory: ./dev-share-api
        run: dotnet tool restore

      - name: Publish
        run: |
          dotnet publish ./dev-share-api/dev-share-api.csproj `
            --configuration Release `
            --output $env:RUNNER_TEMP/dev-share-api `
            -p:EnvironmentName=Test

      - name: Upload artifacts for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{ runner.temp }}/dev-share-api

      - name: Generate EF Core migration script
        working-directory: ./dev-share-api
        run: dotnet ef migrations script --idempotent -o ${{ runner.temp }}/migrations.sql

      - name: Upload migration script for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: db-migrations
          path: ${{ runner.temp }}/migrations.sql

  # Deploy job - runs after build job
  deploy:
    runs-on: windows-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Download migration script from build job
        uses: actions/download-artifact@v4
        with:
          name: db-migrations

      - name: EF - Apply Migration SQL Script 
        uses: azure/sql-action@v2.3
        with:
          connection-string: ${{ secrets.CONNECTION_STRING }}
          path: ./migrations.sql

      - name: Deploy to Azure Web App - Test
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: dev-share-api
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: './'

      - name: Post-deployment verification
        run: |
          echo "✅ Deployment completed successfully"
          echo "Application deployed to Azure Web App: dev-share-api"